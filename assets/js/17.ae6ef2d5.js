(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{433:function(n,t,e){"use strict";e.r(t);var o=e(2),s=Object(o.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("使用 "),t("strong",[n._v("Intersection Observer API")]),n._v(" 在 Vue 组件可见时对其进行懒加载。")]),n._v(" "),t("h3",{attrs:{id:"一-intersection-observer-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-intersection-observer-api"}},[n._v("#")]),n._v(" 一.Intersection Observer API")]),n._v(" "),t("p",[n._v("Intersection Observer API 是一种功能强大的工具，它允许开发人员有效地跟踪和响应浏览器视口中元素可见性的变化。\n它提供了一种异步观察元素与其父元素之间或元素与视口之间交集的方法。它为检测元素何时可见或隐藏提供了性能优越的优化解决方案，减少了对低效滚动事件监听器的需求，使开发人员能够在必要时有选择地加载或操作内容，从而增强用户体验。\n它通常用于实现诸如无限滚动和图片懒加载等功能。")]),n._v(" "),t("h3",{attrs:{id:"二-异步组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-异步组件"}},[n._v("#")]),n._v(" 二.异步组件")]),n._v(" "),t("p",[n._v("Vue 3 提供了 "),t("strong",[n._v("defineAsyncComponent")]),n._v("[2]，用于仅在需要时异步加载组件。\n它返回一个组件定义的 Promise：")]),n._v(" "),t("div",{staticClass:"language-markdown extra-class"},[t("pre",{pre:!0,attrs:{class:"language-markdown"}},[t("code",[n._v("import { defineAsyncComponent } from 'vue'\n\nconst AsyncComp = defineAsyncComponent(() => {\n  return new Promise((resolve, reject) => {\n    // ...load component from server\n    resolve(/"),t("span",{pre:!0,attrs:{class:"token italic"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("*")]),t("span",{pre:!0,attrs:{class:"token content"}},[n._v(" loaded component ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("*")])]),n._v("/)\n  })\n})\n")])])]),t("p",[n._v("还可以处理错误和加载状态：")]),n._v(" "),t("div",{staticClass:"language-markdown extra-class"},[t("pre",{pre:!0,attrs:{class:"language-markdown"}},[t("code",[n._v("const AsyncComp = defineAsyncComponent({\n  // the loader function\n  loader: () => import('./Foo.vue'),\n\n  // A component to use while the async component is loading\n  loadingComponent: LoadingComponent,\n  // Delay before showing the loading component. Default: 200ms.\n  delay: 200,\n\n  // A component to use if the load fails\n  errorComponent: ErrorComponent,\n  // The error component will be displayed if a timeout is\n  // provided and exceeded. Default: Infinity.\n  timeout: 3000\n})\n")])])]),t("p",[n._v("当组件可见时，我们将使用该功能异步加载组件。")]),n._v(" "),t("h3",{attrs:{id:"三-懒加载组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-懒加载组件"}},[n._v("#")]),n._v(" 三.懒加载组件")]),n._v(" "),t("p",[n._v("现在，让我们结合 Intersection Observer API 和 "),t("strong",[n._v("defineAsyncComponent")]),n._v(" 函数，在组件可见时异步加载它们：")]),n._v(" "),t("div",{staticClass:"language-markdown extra-class"},[t("pre",{pre:!0,attrs:{class:"language-markdown"}},[t("code",[n._v("import {\n  h,\n  defineAsyncComponent,\n  defineComponent,\n  ref,\n  onMounted,\n  AsyncComponentLoader,\n  Component,\n} from 'vue';\n\ntype ComponentResolver = (component: Component) => void\n\nexport const lazyLoadComponentIfVisible = ({\n  componentLoader,\n  loadingComponent,\n  errorComponent,\n  delay,\n  timeout\n}: {\n  componentLoader: AsyncComponentLoader;\n  loadingComponent: Component;\n  errorComponent?: Component;\n  delay?: number;\n  timeout?: number;\n}) => {\n  let resolveComponent: ComponentResolver;\n\n  return defineAsyncComponent({\n    // the loader function\n    loader: () => {\n      return new Promise((resolve) => {\n        // We assign the resolve function to a variable\n        // that we can call later inside the loadingComponent \n        // when the component becomes visible\n        resolveComponent = resolve as ComponentResolver;\n      });\n    },\n    // A component to use while the async component is loading\n    loadingComponent: defineComponent({\n      setup() {\n        // We create a ref to the root element of \n        // the loading component\n        const elRef = ref();\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[n._v("        async function loadComponent() {\n            // `resolveComponent()` receives the\n            // the result of the dynamic `import()`\n            // that is returned from `componentLoader()`\n            const component = await componentLoader()\n            resolveComponent(component)\n        }")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[n._v("        onMounted(async() => {\n          // We immediately load the component if\n          // IntersectionObserver is not supported\n          if (!('IntersectionObserver' in window)) {\n            await loadComponent();\n            return;\n          }")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[n._v("          const observer = new IntersectionObserver((entries) => {\n            if (!entries[0].isIntersecting) {\n              return;\n            }")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[n._v("            // We cleanup the observer when the \n            // component is not visible anymore\n            observer.unobserve(elRef.value);\n            await loadComponent();\n          });")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[n._v("          // We observe the root of the\n          // mounted loading component to detect\n          // when it becomes visible\n          observer.observe(elRef.value);\n        });")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token code keyword"}},[n._v("        return () => {\n          return h('div', { ref: elRef }, loadingComponent);\n        };\n      },\n    }),\n    // Delay before showing the loading component. Default: 200ms.\n    delay,\n    // A component to use if the load fails\n    errorComponent,\n    // The error component will be displayed if a timeout is\n    // provided and exceeded. Default: Infinity.\n    timeout,")]),n._v("\n  });\n};\n")])])]),t("p",[n._v("让我们分解一下上面的代码：\n我们创建一个 "),t("strong",[n._v("lazyLoadComponentIfVisible")]),n._v(" 函数，该函数接受以下参数：")]),n._v(" "),t("ul",[t("li",[t("strong",[n._v("componentLoader")]),n._v("：返回一个解析为组件定义的 Promise 的函数")]),n._v(" "),t("li",[t("strong",[n._v("loadingComponent")]),n._v("：异步组件加载时使用的组件。")]),n._v(" "),t("li",[t("strong",[n._v("errorComponent")]),n._v("：加载失败时使用的组件。")]),n._v(" "),t("li",[t("strong",[n._v("delay")]),n._v("：显示加载组件前的延迟。默认值：200 毫秒。")]),n._v(" "),t("li",[t("strong",[n._v("timeout")]),n._v("：如果提供了超时时间，则将显示错误组件。默认值："),t("strong",[n._v("Infinity")]),n._v("。")])]),n._v(" "),t("p",[n._v("函数返回 "),t("strong",[n._v("defineAsyncComponent")]),n._v("，其中包含在组件可见时异步加载组件的逻辑。\n主要逻辑发生在 "),t("strong",[n._v("defineAsyncComponent")]),n._v(" 内部的 "),t("strong",[n._v("loadingComponent")]),n._v(" 中：\n我们使用 "),t("strong",[n._v("defineComponent")]),n._v(" 创建一个新组件，该组件包含一个渲染函数，用于在传递给 "),t("strong",[n._v("lazyLoadComponentIfVisible")]),n._v(" 的 "),t("strong",[n._v("div")]),n._v(" 中渲染 "),t("strong",[n._v("loadingComponent")]),n._v("。该渲染函数包含一个指向加载组件根元素的模板"),t("strong",[n._v("ref")]),n._v("。\n在 "),t("strong",[n._v("onMounted")]),n._v(" 中，我们会检查 "),t("strong",[n._v("IntersectionObserver")]),n._v(" 是否受支持。如果不支持，我们将立即加载组件。否则，我们将创建一个 "),t("strong",[n._v("IntersectionObserver")]),n._v("，用于观察已加载组件的根元素，以检测它何时变得可见。当组件变为可见时，我们会清理观察者并加载组件。\n现在，你可以使用该函数在组件可见时对其进行懒加载：")]),n._v(" "),t("div",{staticClass:"language-markdown extra-class"},[t("pre",{pre:!0,attrs:{class:"language-markdown"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),n._v("script")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[n._v("setup")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[n._v("lang")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v('"')]),n._v("ts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),t("span",{pre:!0,attrs:{class:"token script"}},[t("span",{pre:!0,attrs:{class:"token language-javascript"}},[n._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("import")]),n._v(" Loading "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("from")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'./components/Loading.vue'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("import")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v(" lazyLoadComponentIfVisible "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("from")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'./utils'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("const")]),n._v(" LazyLoaded "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("lazyLoadComponentIfVisible")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n  "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[n._v("componentLoader")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=>")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("import")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'./components/HelloWorld.vue'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[n._v("loadingComponent")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" Loading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("</")]),n._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),n._v("template")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),n._v("LazyLoaded")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("/>")])]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("</")]),n._v("template")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v("\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);